@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" defer></script>
    <script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
    <script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>
    <link rel="stylesheet" href="style.css">
</head>

<style>
    @@import url('https://fonts.googleapis.com/css2?family=Fasthand&family=Poppins:wght@300;400;500;600;700&display=swap');

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        background-image: url(https://www.workato.com/product-hub/wp-content/uploads/2022/01/Dec-product-header-new-2.gif);
        background-size: cover;
        font-family: "Poppins", sans-serif;
    }

    .login {
        width: 420px;
        margin: auto;
        height: min-content;
        padding: 40px;
        border-radius: 12px;
        background: #ffffff;
    }

        .login h1 {
            font-size: 32px;
            margin-bottom: 25px;
        }

        .login form {
            font-size: 18px;
        }

            .login form .form-group {
                margin-bottom: 12px;
            }

            .login form input[type="submit"] {
                font-size: 18px;
                margin-top: 15px;
            }

    .login-register {
        font-size: .9em;
        color: #162938;
        text-align: center;
        font-weight: 500;
        margin: 25px 0 10px;
    }

    .back-button {
        text-align: left;
    }

    /* Center the icon and make it larger */
    #facialRecognitionBtn {
        display: flex;
        align-items: center;
        justify-content: center;
    }

        #facialRecognitionBtn:hover {
            background-color: transparent; /* Remove background color on hover */
            color: #007bff; /* Blue text color on hover */
            border: 2px solid #007bff; /* Remove border on hover */
        }

        #facialRecognitionBtn ion-icon {
            font-size: 1.5em; /* Adjust the size as needed */
            margin-right: 8px; /* Adjust spacing if needed */
        }

    .overlay-container {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.7);
        justify-content: center;
        align-items: center;
        z-index: 999; /* Ensure the overlay appears above other elements */
    }


    /* Center the container horizontally and vertically */
    .container {
        position: relative;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    .container {
        background-color: #fff;
        padding: 20px;
        text-align: center;
    }

    /* Center the container horizontally and vertically */
    .container {
        position: relative;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    .overlay-container {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.7);
        justify-content: center;
        align-items: center;
        z-index: 999;
    }

    .overlay-content {
        background-color: #fff;
        padding: 40px; /* Increase padding for a larger container */
        text-align: center;
        border-radius: 10px;
        position: relative;
    }

        .overlay-content button {
            border-radius: 8px;
            border-color: #4cd7d0;
            background-color: #4cd7d0;
            color: #fff;
            padding: 15px 20px; /* Increase padding for larger buttons */
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

            .overlay-content button:hover {
                background-color: #36b8b1;
            }

            .overlay-content button.close-btn {
                position: absolute;
                top: 10px;
                right: 10px;
                background-color: transparent;
                color: #333;
                border: none;
                font-size: 20px;
                cursor: pointer;
            }

                .overlay-content button.close-btn:hover {
                    color: #e44d26; /* Change the color on hover */
                }

</style>

<body>

    <div class="login">

        <div class="back-button">
            <p><a class="register-link" asp-controller="Home" asp-action="Index">Back</a></p>
        </div>

        <h1 class="text-center">Employee Login</h1>

        <form class="needs-validation" action="/Staff/StaffLogin" method="post" id="loginForm">
            <div class="form-group was-validated">
                <label class="form-label" for="email">Email address</label>
                <input class="form-control" type="email" id="email" name="email" required autofocus>
                <div class="invalid-feedback">
                    Please enter your email address
                </div>
            </div>
            <div class="form-group was-validated">
                <label class="form-label" for="password">Password</label>
                <input class="form-control" type="password" id="password" name="password" required>
                <div class="invalid-feedback">
                    Please enter your password
                </div>
            </div>
            <div class="form-group">
                <!-- Use Ionicons happy-outline icon -->
                <button type="button" class="btn btn-primary w-100" id="facialRecognitionBtn">
                    <ion-icon name="happy-outline"></ion-icon>  Facial Recognition
                </button>
            </div>

            <div class="overlay-container" id="overlayContainer">
                <div class="overlay-content">
                    <button class="close-btn" onclick="hideOverlay()" title="Close">&#10006;</button>
                    <h1>Facial Recognition</h1><br>
                    <button onclick="enrollNewUser()" title="Enroll a new user on this FACEIO application">Enroll New User</button>
                    <button onclick="authenticateUser()" title="Authenticate a previously enrolled user on this application">Authenticate User</button>
                </div>
            </div>

            <div class="form-group form-check">
                <input class="form-check-input" type="checkbox" id="check">
                <label class="form-check-label" for="check">Remember me</label>
            </div>
            <input class="btn btn-success w-100" type="submit" value="SIGN IN">

            <br />
            <span style="color:red;">@TempData["Message"]</span>
        </form>

    </div>

    <div id="faceio-modal"></div>
    <script src="https://cdn.faceio.net/fio.js"></script>
    <script src="~/js/FaceRecognition.js"></script>

    <script type="text/javascript">
        document.getElementById('facialRecognitionBtn').addEventListener('click', function () {
            var overlayContainer = document.getElementById('overlayContainer');
            overlayContainer.style.display = 'flex'; // Show the overlay container
        });

        function hideOverlay() {
            var overlayContainer = document.getElementById('overlayContainer');
            overlayContainer.style.display = 'none'; // Hide the overlay container
        }

        // Enrolment and Authentication
        const faceio = new faceIO("fioa1f13"); /* Your application Public ID */

        function enrollNewUser() {
            // Start the facial enrollment process
            faceio.enroll({
                "locale": "auto", // Default user locale
                "payload": {
                    /* The payload we want to associate with this user
                    * which is forwarded back to us upon future
                    * authentication of this particular user.*/
                    "whoami": 123456, // Example of dummy ID linked to this particular user
                    "email": "john.doe@example.com"
                }
            }).then(userInfo => {
                // User Successfully Enrolled!
                alert(
                    `User Successfully Enrolled! Details:
                                    Unique Facial ID: ${userInfo.facialId}
                                    Enrollment Date: ${userInfo.timestamp}
                                    Gender: ${userInfo.details.gender}
                                    Age Approximation: ${userInfo.details.age}`
                );
                console.log(userInfo);
                // handle success, save the facial ID, redirect to dashboard...
            }).catch(errCode => {
                // handle enrollment failure. Visit:
                // https://faceio.net/integration-guide#error-codes
                // for the list of all possible error codes
            })

            hideOverlay();
        }

        function authenticateUser() {
            // Authenticate a previously enrolled user
            faceio.authenticate({
                "locale": "auto" // Default user locale
            }).then(userData => {
                console.log("Success, user identified")
                // Grab the facial ID linked to this particular user which will be same
                // for each of his successful future authentication. FACEIO recommend
                // that your rely on this Facial ID if you plan to uniquely identify
                // all enrolled users on your backend for example.
                console.log("Linked facial Id: " + userData.facialId)
                // Grab the arbitrary data you have already linked (if any) to this particular user
                // during his enrollment via the payload parameter of the enroll() method.
                console.log("Payload: " + JSON.stringify(userData.payload))
                // {"whoami": 123456, "email": "john.doe@example.com"} set via enroll()

                // Redirect to StaffMain page
                window.location.href = "/Staff/StaffMain"; // Replace "/StaffMain" with your actual URL
            }).catch(errCode => {
                // handle authentication failure. Visit:
                // https://faceio.net/integration-guide#error-codes
                // for the list of all possible error codes
            })

            hideOverlay();
        }

        function handleError(errCode) {
            // Log all possible error codes during user interaction..
            // Refer to: https://faceio.net/integration-guide#error-codes
            // for a detailed overview when these errors are triggered.
            switch (errCode) {
                case fioErrCode.PERMISSION_REFUSED:
                    console.log("Access to the Camera stream was denied by the end user");
                    break;
                case fioErrCode.NO_FACES_DETECTED:
                    console.log("No faces were detected during the enroll or authentication process");
                    break;
                case fioErrCode.UNRECOGNIZED_FACE:
                    console.log("Unrecognized face on this application's Facial Index");
                    break;
                case fioErrCode.MANY_FACES:
                    console.log("Two or more faces were detected during the scan process");
                    break;
                case fioErrCode.FACE_DUPLICATION:
                    console.log("User enrolled previously (facial features already recorded). Cannot enroll again!");
                    break;
                case fioErrCode.MINORS_NOT_ALLOWED:
                    console.log("Minors are not allowed to enroll on this application!");
                    break;
                case fioErrCode.PAD_ATTACK:
                    console.log("Presentation (Spoof) Attack (PAD) detected during the scan process");
                    break;
                case fioErrCode.FACE_MISMATCH:
                    console.log("Calculated Facial Vectors of the user being enrolled do not matches");
                    break;
                case fioErrCode.WRONG_PIN_CODE:
                    console.log("Wrong PIN code supplied by the user being authenticated");
                    break;
                case fioErrCode.PROCESSING_ERR:
                    console.log("Server side error");
                    break;
                case fioErrCode.UNAUTHORIZED:
                    console.log("Your application is not allowed to perform the requested operation (eg. Invalid ID, Blocked, Paused, etc.). Refer to the FACEIO Console for additional information");
                    break;
                case fioErrCode.TERMS_NOT_ACCEPTED:
                    console.log("Terms & Conditions set out by FACEIO/host application rejected by the end user");
                    break;
                case fioErrCode.UI_NOT_READY:
                    console.log("The FACEIO Widget could not be (or is being) injected onto the client DOM");
                    break;
                case fioErrCode.SESSION_EXPIRED:
                    console.log("Client session expired. The first promise was already fulfilled but the host application failed to act accordingly");
                    break;
                case fioErrCode.TIMEOUT:
                    console.log("Ongoing operation timed out (eg, Camera access permission, ToS accept delay, Face not yet detected, Server Reply, etc.)");
                    break;
                case fioErrCode.TOO_MANY_REQUESTS:
                    console.log("Widget instantiation requests exceeded for freemium applications. Does not apply for upgraded applications");
                    break;
                case fioErrCode.EMPTY_ORIGIN:
                    console.log("Origin or Referer HTTP request header is empty or missing");
                    break;
                case fioErrCode.FORBIDDDEN_ORIGIN:
                    console.log("Domain origin is forbidden from instantiating fio.js");
                    break;
                case fioErrCode.FORBIDDDEN_COUNTRY:
                    console.log("Country ISO-3166-1 Code is forbidden from instantiating fio.js");
                    break;
                case fioErrCode.SESSION_IN_PROGRESS:
                    console.log("Another authentication or enrollment session is in progress");
                    break;
                case fioErrCode.NETWORK_IO:
                default:
                    console.log("Error while establishing network connection with the target FACEIO processing node");
                    break;
            }
        }
    </script>

</body>

</html>